local helper = require "penta_assets/asset_helper"

local modelList = {
    { "", "asset/ground/pipes_large_grounded_13m.mdl" },
    { "", "asset/ground/pipes_large_grounded_5m.mdl" },
    { "", "asset/ground/pipes_large_grounded_9m.mdl" },
    { "", "asset/ground/pipes_large_grounded_curved_10m.mdl" },
    { "", "asset/ground/pipes_large_grounded_curved_2m.mdl" },
    { "", "asset/ground/pipes_large_grounded_curved_6m.mdl" },
    { "", "asset/ground/pipes_large_grounded_end.mdl" },
    { "", "asset/ground/pipes_large_special_01.mdl" },
    { "", "asset/ground/pipes_large_special_02.mdl" },
    { "", "asset/ground/pipes_large_special_mix_01.mdl" },
    { "", "asset/ground/pipes_small_grounded_12m.mdl" },
    { "", "asset/ground/pipes_small_grounded_6m.mdl" },
    { "", "asset/ground/pipes_small_grounded_9m.mdl" },
    { "", "asset/ground/pipes_small_grounded_curved_3m.mdl" },
    { "", "asset/ground/pipes_small_grounded_curved_6m.mdl" },
    { "", "asset/ground/pipes_small_grounded_curved_9m.mdl" },
    { "", "asset/ground/pipes_small_grounded_end.mdl" },
    { "", "asset/ground/pipes_small_special_01.mdl" },
    { "", "asset/ground/pipe_curve.mdl" },
    { "", "asset/ground/pipe_end.mdl" },
    { "", "asset/ground/pipe_straight.mdl" },
    { "", "asset/ground/pipe_t.mdl" },
    { "", "asset/ground/pipe_valve.mdl" },
}

function data()

    return {
        type = "ASSET_DEFAULT",
        description = {
            name = "Pipes",
            description = "All vanilla pipes",
        },
        availability = {
            yearFrom = 1850,
            yearTo = 0,
        },
        buildMode = "MULTI",
        categories = { "industrial" },
        order = 100,
        skipCollision = true,
        autoRemovable = false,

        params = {
            {
                key = "asset",
                name = "Pipes",
                uiType = "BUTTON", -- "ICON_BUTTON",
                values = helper.getButtonValues(modelList), -- helper.getIconValues(modelList, 0)
            },
            {
                key = "asset_size",
                name = "Scale",
                uiType = "SLIDER",
                values = { "0.10x", "0.25x", "0.5x", "0.75x", "1.0x", "1.5x", "2.0x" },
                defaultIndex = 4,
                tooltip = "Scales the asset's size.",
            },
        },

        updateFn = function(params)
            local result = {}
            local sizeFactor = { 0.1, 0.25, 0.5, 0.75, 1, 1.5, 2 }

            -- because lua is one-indexed, but the parameter value is (for some reason) zero-indexed:
            params.asset = params.asset + 1
            params.asset_size = params.asset_size + 1

            local size = sizeFactor[params.asset_size]
            result.models = {}

            result.models = { {
                id = modelList[params.asset][2], -- Index 2 is the model uri
                transf = { 1 * size, 0, 0, 0, 0, 1 * size, 0, 0, 0, 0, 1 * size, 0, 0, 0, 0, 1 }
            } }

            result.terrainAlignmentLists = {
                { type = "EQUAL", faces = {} }
            }

            return result
        end
    }

end
