local helper = require "penta_assets/asset_helper"

local modelList = {
    { "", "vehicle/tram/asia/dl_3000_witt.mdl" },
    { "", "vehicle/tram/asia/ivan.mdl" },
    { "", "vehicle/tram/asia/kolomna.mdl" },
    { "", "vehicle/tram/asia/ktm_1.mdl" },
    { "", "vehicle/tram/asia/lm_68.mdl" },
    { "", "vehicle/tram/asia/lvs_86.mdl" },
    { "", "vehicle/tram/asia/moscow_f.mdl" },
    { "", "vehicle/tram/asia/odessa.mdl" },
    { "", "vehicle/tram/asia/st_petersburg.mdl" },
    { "", "vehicle/tram/asia/vityaz_m.mdl" },
    { "", "vehicle/tram/atm_4000.mdl" },
    { "", "vehicle/tram/be4_6mirage.mdl" },
    { "", "vehicle/tram/be5_6.mdl" },
    { "", "vehicle/tram/caf_urbos3.mdl" },
    { "", "vehicle/tram/dampftram.mdl" },
    { "", "vehicle/tram/halle.mdl" },
    { "", "vehicle/tram/schst.mdl" },
    { "", "vehicle/tram/strassenbahn1850.mdl" },
    { "", "vehicle/tram/typ1.mdl" },
    { "", "vehicle/tram/usa/horse_trolley_car.mdl" },
    { "", "vehicle/tram/usa/pcc_1643_pittsburgh.mdl" },
    { "", "vehicle/tram/usa/pcc_a_7.mdl" },
    { "", "vehicle/tram/usa/peter_witt_streetcar.mdl" },
    { "", "vehicle/tram/usa/san_diego.mdl" },
    { "", "vehicle/tram/usa/skoda_10t.mdl" },
    { "", "vehicle/tram/usa/strassenbahn1850_usa.mdl" },
    { "", "vehicle/tram/usa/toronto_clrv.mdl" },
}

function data()

    return {
        type = "ASSET_DEFAULT",
        description = {
            name = "Trams",
            description = "All vanilla trams",
        },
        availability = {
            yearFrom = 1850,
            yearTo = 0,
        },
        buildMode = "MULTI",
        categories = { "vehicles" },
        order = 100,
        skipCollision = true,
        autoRemovable = false,

        params = {
            {
                key = "asset",
                name = "Trams",
                uiType = "BUTTON", -- "ICON_BUTTON",
                values = helper.getButtonValues(modelList, 1), -- helper.getButtonValues(modelList, 0)
            },
            {
                key = "asset_size",
                name = "Scale",
                uiType = "SLIDER",
                values = { "0.10x", "0.25x", "0.5x", "0.75x", "1.0x", "1.5x", "2.0x" },
                defaultIndex = 3,
                tooltip = "Scales the asset's size.",
            },
            --{
            --    key = "terrain_alignment",
            --    name = "Align to terrain",
            --    uiType = "CHECKBOX",
            --    values = { "0", "1" },
            --    defaultIndex = 0,
            --},
        },

        updateFn = function(params)
            local result = {}

            result.models = {}

            local size = 1.0
            --local alignment = false

            if params.asset_size == 0 then size = 0.1 end
            if params.asset_size == 1 then size = 0.25 end
            if params.asset_size == 2 then size = 0.5 end
            if params.asset_size == 3 then size = 0.75 end
            if params.asset_size == 4 then size = 1.0 end -- default
            if params.asset_size == 5 then size = 1.5 end
            if params.asset_size == 6 then size = 2.0 end

            --if params.terrain_alignment == 0 then alignment = false end
            --if params.terrain_alignment == 1 then alignment = true end

            for i = 0, #modelList - 1, 1 do
                if params.asset == i then
                    result.models[#result.models + 1] = {
                        id = modelList[i + 1][1],
                        transf = { 1 * size, 0, 0, 0, 0, 1 * size, 0, 0, 0, 0, 1 * size, 0, 0, 0, 0, 1 }
                    }
                end
            end

            result.terrainAlignmentLists = {
                { type = "EQUAL", faces = {} }
            }

            return result
        end
    }

end
